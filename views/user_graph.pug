extends layout
block content
 h1=title
  script(type="text/javascript")
   var data = data

   /* d3.csv("data.csv", function(error, data) {
   data.forEach(function(d) {
        d.diastolic = +d.diastolic;
        d.systolic = +d.systolic;
    });*/
    data.log.forEach(function(item){
    var date = item.date.match(/\d{4}-\d{2}-\d{2}/)
    item.date = new Date(date)
     })



     const w = 1000;
     const h = 700;
     const padding = 100;
     
     const svg = d3.select('body')
     .append('svg')
     .attr('width', w)
     .attr('height', h)
     
     var toolTip = d3.select('body')
     .append('div')
     .attr('id', 'tooltip')
     .style('opacity', 0)
     
     var colors = d3.scaleOrdinal()
     .domain(["systolic", "diastolic"])
     .range(["#F71735", "#44FFD1"]);
     
     const xScale = d3.scaleTime()
     .domain([d3.min(data.log, function(d){return d.date}), d3.max(data.log, function(d){return d.date})])
     .range([padding, w-padding])
     
     const yScale = d3.scaleLinear()
     .domain([0, d3.max(data.log, function(d){return d.systolic})])
     .range([h - padding, padding]);
     
     var xTimeFormat = d3.timeFormat("%d-%b-%y");
     
     var bloodPressures = ['systolic', 'diastolic']/*data.log.forEach(function(obj){
       return Object.keys(obj)
     })
     .filter(function(item){return item=='systolic'|| item=='diastolic'})
      console.log(bloodPressures)*/
     
      var series = bloodPressures.map(function(item){
        return data.log.map(function(d){
          return{'date': d.date, 'y':d[item], 'activity': d.activity, 'lemonwater': d.lemonwater, 'item': item}
         })
     })
     console.log(series[0])
     console.log(series)
     //1st value line
     var systolicline = d3.line()
    .x(function(d) { return xScale(d.date); })
    .y(function(d) { return yScale(d.y); });

     //second value line
     var diastolicline = d3.line()
    .x(function(d) { return xScale(d.date); })
    .y(function(d) { return yScale(d.y); });


     // Add the valueline paths.
     svg.append("path")
      .data(series[0])
      .attr("class", "line")
      .attr("d", systolicline);

     svg.append("path")
      .data(series[1])
      .attr("class", "line")
      .attr("d", diastolicline);
     
     svg.selectAll('.series')
     .data(series)
     .enter().append('g')
     .attr('class', 'series')
     .selectAll('.dot')
     .data(function(d){return d})
     .enter().append('circle')
     .attr('class', 'dot')
     .attr('r', 5)
     .style('fill', function(d, i){return colors(d.item)})
     .attr('cx', function(d){return xScale(d.date)})
     .attr('cy', function(d){return yScale(d.y)})
      .on('mouseover', function(d){
         toolTip.transition()
         .duration(300)
         .style('opacity', 1)
         toolTip.html(d.item + ": " + d.y + 'mmHg' + '<br>' + 'Most Recent Activity: ' + d.activity + '<br>' + 'lemonwater: ' + d.lemonwater)
         .style("left", (d3.event.pageX) + 'px')
         .style("top", (d3.event.pageY) + 'px')
         
     })
     .on("mouseout", function(d){
       toolTip.transition()
           .duration(400)
            .style("opacity", 0)});
            
    //x and y axes
            
     const xAxis = d3.axisBottom(xScale).tickFormat(xTimeFormat);
     const yAxis = d3.axisLeft(yScale)
  
     svg.append('g')
    .attr("transform", "translate(0," + (h-padding) + ")")
    .call(xAxis)
    .attr("id", "x-axis")
    //x-axis label
    svg.append("text")
    .attr("id", "x-axis-label")
    .text("Date")
    .attr("x", w/2)
    .attr("y", h-20)
    .attr("font-size", 20)
    .style("text-anchor", "end")
  
  svg.append('g')
  .attr("transform", "translate(" + (padding) + ", 0)")
  .call(yAxis)
  .attr("id", "y-axis")
    //y-axis label
   svg.append("text")
  .attr("id", "y-axis-label")
  .attr("y", padding-60)
   .attr("x", -h/2)
   .attr("transform", "rotate(-90)")
   .attr("dy", ".71em")
  .text("Blood Pressure (mmHg)")
  
  //legend
    
    
   var legend = svg.selectAll('.legend')
   .data(colors.range())
   .enter()
   .append('g')
  .attr("transform", function(d, i){ return "translate(" +(w/2) + "," + h/2 - i * 20 + ")"})
  
    .style("font-size","12px")
   .attr("id", "legend")
    
    legend.append("rect")
    .attr("x", w - 66)
     .attr("y", function(d, i){return h-205 + 15 *i})
     .attr("width", 18)
     .attr("height", 18)
    .attr("fill", function(d){return d})
    
   legend.append("text")
    .attr("x", w - 84)
     .attr("y", function(d, i){return h-200 + 15 *i})
     .attr("dy", ".35em")
     .style("text-anchor", "end")
    .text((d) => d === "#F71735" ? "Systolic": "Diastolic")
    

 
     